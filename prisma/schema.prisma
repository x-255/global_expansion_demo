// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Company {
  id          Int                 @id @default(autoincrement())
  name        String              @unique
  industry    String?
  size        String?
  location    String?
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  assessments CompanyAssessment[]
}

model CompanyAssessment {
  id        Int      @id @default(autoincrement())
  companyId Int
  company   Company  @relation(fields: [companyId], references: [id])
  answers   String // JSON string of answers
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MaturityLevel {
  id           Int            @id @default(autoincrement())
  level        Int // Numerical level (1-5)
  name         String // e.g. "L1（初始级）"
  description  String // e.g. "未建立相关能力或完全依赖外部支持"
  coreFeatures String // e.g. "缺乏战略规划、市场洞察、资源协同等核心能力，国际化实践零散且无体系"
  minScore     Float // Minimum score for this level
  maxScore     Float // Maximum score for this level
  strategies   CoreStrategy[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  @@unique([level])
}

model Dimension {
  id             Int        @id @default(autoincrement())
  name           String // e.g. "战略规划与执行"
  description    String? // General description
  coreCapability String // e.g. "战略制定、目标管理、资源调配"
  weight         Float      @default(1.0) // Dimension weight
  order          Int        @default(0) // Display/processing order
  questions      Question[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  deleted        Boolean    @default(false)
}

model Question {
  id          Int              @id @default(autoincrement())
  text        String // Question text
  explanation String? // Optional explanation
  weight      Float            @default(1.0) // Question weight within dimension
  order       Int              @default(0) // Display/processing order
  dimensionId Int
  dimension   Dimension        @relation(fields: [dimensionId], references: [id])
  options     QuestionOption[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  deleted     Boolean          @default(false)
}

model QuestionOption {
  id          Int      @id @default(autoincrement())
  questionId  Int
  question    Question @relation(fields: [questionId], references: [id])
  score       Float // The score for this option (1-5)
  description String // The specific option text for this score level
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([questionId, score])
}

model CoreStrategy {
  id        Int           @id @default(autoincrement())
  levelId   Int
  level     MaturityLevel @relation(fields: [levelId], references: [id])
  name      String // Strategy name
  actions   String // Key actions (stored as JSON)
  order     Int           @default(0) // Display/processing order
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model Admin {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
